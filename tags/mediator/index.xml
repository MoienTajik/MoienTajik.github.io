<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mediator on Moien Tajik&#39;s Blog | وبلاگ معین تاجیک</title>
    <link>/tags/mediator/</link>
    <description>Recent content in Mediator on Moien Tajik&#39;s Blog | وبلاگ معین تاجیک</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fa</language>
    <lastBuildDate>Wed, 06 Nov 2019 22:00:00 +0330</lastBuildDate>
    
	<atom:link href="/tags/mediator/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>پیاده سازی CQRS توسط MediatR - قسمت سوم</title>
      <link>/posts/2019-11-06-mediatr-part-3/</link>
      <pubDate>Wed, 06 Nov 2019 22:00:00 +0330</pubDate>
      
      <guid>/posts/2019-11-06-mediatr-part-3/</guid>
      <description>در قسمت قبلی روش استفاده از IRequest و IRequestHandler را در MediatR که نقش پیاده سازی Command/Query را در CQRS بر عهده دارند، بررسی کردیم. کدهای این قسمت در این ریپازیتوری به‌روزرسانی شده و قابل دسترسی است.
Command ما که نقش ایجاد یک مشتری را داشت ( CreateCustomerCommand ) ، هیچ Validation ای برای اعتبار سنجی مقادیر ورودی از سمت کاربر را ندارد و کاربر با هر مقادیری میتواند این Command را فراخوانی کند.</description>
    </item>
    
    <item>
      <title>پیاده سازی CQRS توسط MediatR - قسمت دوم</title>
      <link>/posts/2019-11-06-mediatr-part-2/</link>
      <pubDate>Wed, 06 Nov 2019 21:00:00 +0330</pubDate>
      
      <guid>/posts/2019-11-06-mediatr-part-2/</guid>
      <description>در این مطلب قصد داریم به بررسی امکانات داخلی فریمورک MediatR بپردازیم. سورس این قسمت مقاله در این ریپازیتوری قابل دسترسی است.
نصب و راه اندازی در ابتدا یک پروژه جدید ASP.NET Core از نوع API را ایجاد میکنیم و با استفاده از Nuget Package Manager ، پکیج MediatR را داخل پروژه نصب میکنیم:
Install-Package MediatR  بعد از نصب نیاز داریم تا نیازمندی‌های این فریمورک را داخل DI Container خود Register کنیم.</description>
    </item>
    
    <item>
      <title>پیاده سازی CQRS توسط MediatR - قسمت اول</title>
      <link>/posts/2019-11-06-mediatr-part-1/</link>
      <pubDate>Wed, 06 Nov 2019 20:00:00 +0330</pubDate>
      
      <guid>/posts/2019-11-06-mediatr-part-1/</guid>
      <description>پیاده سازی الگو CQRS هرچند با فریمورک آماده‌ای همچون SimpleCQRS ، دارای پیچیدگی زیاد و باعث نوشتن حجم زیادی کد می‌شود.
فریمورک MediatR توسط توسعه دهنده کتابخانه‌ی محبوب AutoMapper ایجاد شده‌است. این فریمورک پیاده سازی کاملی از الگوی طراحی Mediator در NET. است که داخل خود، تمام پیچیدگی‌های پیاده سازی CQRS را Abstract کرده و با حداقل کد ممکن، می‌توانید براحتی CQRS را داخل پروژه‌ خود پیاده سازی کنید.</description>
    </item>
    
    <item>
      <title>الگوهای طراحی - Mediator</title>
      <link>/posts/2019-01-19-mediator-design-pattern/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019-01-19-mediator-design-pattern/</guid>
      <description>الگوی طراحی Mediator نحوه ی ارتباط چند object را در داخل خود کپسوله و مشخص میکند.
یک مثال واقعی از این الگو :
برج مراقبت یک فرودگاه را در نظر بگیرید. این بخش از تمامی هواپیماهایی که تردد میکنند باخبر بوده و وظیفه مدیریت پرواز آن ها را بر عهده داشته و اجازه فرود و پرواز آن ها را صادر میکند. در صورتی که اجازه فرود داده نشود ، هواپیما اجازه به نشستن ندارد.</description>
    </item>
    
  </channel>
</rss>