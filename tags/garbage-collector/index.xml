<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Garbage Collector on Moien Tajik&#39;s Blog | وبلاگ معین تاجیک</title>
    <link>/tags/garbage-collector/</link>
    <description>Recent content in Garbage Collector on Moien Tajik&#39;s Blog | وبلاگ معین تاجیک</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fa</language>
    <lastBuildDate>Thu, 12 Dec 2019 23:00:00 +0330</lastBuildDate>
    
	<atom:link href="/tags/garbage-collector/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Garbage Collector در CSharp - قسمت دوم</title>
      <link>/posts/2019-12-12-gc-part-2/</link>
      <pubDate>Thu, 12 Dec 2019 23:00:00 +0330</pubDate>
      
      <guid>/posts/2019-12-12-gc-part-2/</guid>
      <description>در این مطلب قصد داریم به تفاوت‎های بین Stack و Heap در Memory و زبان #C بپردازیم.
به زبان ساده، وقتی شما متغیر جدیدی ایجاد میکنید، با توجه به نوع (Type) آن متغیر، &amp;ldquo;مقدار&amp;rdquo; متغیر شما در Stack یا Heap قرار خواهد گرفت.
Stack Stack نوعی ساختمان داده است که در آن، داده‌ها بصورت خطی قرار گرفته و اصطلاحا ساختار LIFO ( مخفف Last in, First Out ) دارند، بدین معنی که همیشه آخرین داده ای که داخل Stack قرار داده اید، اولین داده ای است که قادر به خواندن آن خواهید بود.</description>
    </item>
    
    <item>
      <title>Garbage Collector در CSharp - قسمت اول</title>
      <link>/posts/2019-11-29-gc-part-1/</link>
      <pubDate>Fri, 29 Nov 2019 21:00:00 +0330</pubDate>
      
      <guid>/posts/2019-11-29-gc-part-1/</guid>
      <description>Garbage Collection  فرض کنید متغییری را ایجاد کرده و به آن مقدار داده ‎‎اید:
string message = &amp;quot;Hello World!&amp;quot;;  آیا تابحال به این موضوع فکر کرده اید که طول عمر متغییر message تا چه زمانی است و چه زمانی باید از بین برود؟
چه زمانی باید توسط کامپایلر ( یا بهتر بگوییم ، Runtime ) طول عمر این متغییر به پایان برسد و از حافظه حذف شود؟</description>
    </item>
    
  </channel>
</rss>